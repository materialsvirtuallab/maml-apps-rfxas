name: Testing

on: [push, pull_request]

jobs:
  build:

    strategy:
      max-parallel: 20
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-ci.txt
        pip install -e .
    - name: pytest
      env:
        PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
      run: |
        pytest maml --cov=maml
    - name: Coveralls Python
      if: matrix.os == 'ubuntu-latest'
      uses: AndreMiras/coveralls-python-action@v20201129